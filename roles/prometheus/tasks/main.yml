---
- name: Prometheus user
  user:
    name: prometheus
    group: prometheus
    create_home: no
    home: /opt/prometheus
    system: yes
    uid: 3434
    state: present
  become: yes
  become_user: root

- name: See if prometheus is installed
  stat:
    path: /opt/prometheus
  register: prometheus
 
- name: Download prometheus
  get_url:
    dest: /tmp/prometheus-{{ prometheus_version }}.linux-{{ cpu_arch }}.tar.gz
    url: https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-{{ cpu_arch }}.tar.gz
    checksum: "{{ prometheus_checksum.{{ cpu_arch }} }}"
  when: prometheus.stat.exists == false

- name: Extract prometheus
  unarchive:
    src: /tmp/prometheus-{{ prometheus_version }}.linux-{{ cpu_arch }}.tar.gz
    dest: /opt
    remote_src: yes
  become: yes
  become_user: root
  when: prometheus.stat.exists == false
  register: extract_prometheus

- name: Rename to /opt/prometheus
  command: mv /opt/prometheus-{{ prometheus_version }}.linux-{{ cpu_arch }} /opt/prometheus
  when: prometheus.stat.exists == false
  become: yes
  become_user: root

- name: Copy prometheus config
  copy:
    src: prometheus.yml
    dest: /opt/prometheus/prometheus.yml
    owner: prometheus
    group: prometheus
    mode: 0644
  become: yes
  become_user: root

- name: Remove prometheus tarball
  file:
    path: /tmp/prometheus-{{ prometheus_version }}.linux-{{ cpu_arch }}.tar.gz
    state: absent

- name: Create /var/lib/prometheus
  file:
    path: /var/lib/prometheus
    state: directory
    owner: prometheus
    group: prometheus
  become: yes
  become_user: root

- name: Allow prometheus in firewall
  firewalld:
    port: 9090/tcp
    permanent: yes
    state: enabled
  become: yes
  become_user: root

- name: Create prometheus service
  copy:
    src: prometheus.service
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0755
  become: yes
  become_user: root

- name: Enable prometheus service
  systemd:
    name: prometheus.service
    state: restarted
    enabled: yes
    daemon_reload: yes
  become: yes
  become_user: root
